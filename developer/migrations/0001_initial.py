# Generated by Django 4.2.19 on 2025-04-05 16:53

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logger_name', models.CharField(max_length=100, verbose_name='日志器名称')),
                ('level', models.CharField(choices=[('DEBUG', '调试'), ('INFO', '信息'), ('WARNING', '警告'), ('ERROR', '错误'), ('CRITICAL', '严重')], max_length=10, verbose_name='日志级别')),
                ('message', models.TextField(verbose_name='日志消息')),
                ('trace', models.TextField(blank=True, null=True, verbose_name='堆栈跟踪')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
            ],
            options={
                'verbose_name': '系统日志',
                'verbose_name_plural': '系统日志',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SystemMonitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component', models.CharField(choices=[('app_server', '应用服务器'), ('db_server', '数据库服务器'), ('file_server', '文件服务器'), ('cache_server', '缓存服务器'), ('queue_server', '队列服务器')], max_length=50, verbose_name='组件名称')),
                ('cpu_usage', models.FloatField(help_text='百分比', verbose_name='CPU使用率')),
                ('memory_usage', models.FloatField(help_text='百分比', verbose_name='内存使用率')),
                ('disk_usage', models.FloatField(help_text='百分比', verbose_name='磁盘使用率')),
                ('network_in', models.FloatField(help_text='MB/s', verbose_name='网络入流量')),
                ('network_out', models.FloatField(help_text='MB/s', verbose_name='网络出流量')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
            ],
            options={
                'verbose_name': '系统监控数据',
                'verbose_name_plural': '系统监控数据',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='WebSocketSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='会话ID')),
                ('client_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='客户端IP')),
                ('connected_at', models.DateTimeField(auto_now_add=True, verbose_name='连接时间')),
                ('disconnected_at', models.DateTimeField(blank=True, null=True, verbose_name='断开时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否活跃')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='最后活动时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user', verbose_name='用户')),
            ],
            options={
                'verbose_name': 'WebSocket会话',
                'verbose_name_plural': 'WebSocket会话',
                'ordering': ['-connected_at'],
            },
        ),
        migrations.CreateModel(
            name='WebSocketMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction', models.CharField(choices=[('incoming', '接收'), ('outgoing', '发送')], max_length=10, verbose_name='方向')),
                ('message', models.TextField(verbose_name='消息内容')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='时间戳')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='developer.websocketsession', verbose_name='会话')),
            ],
            options={
                'verbose_name': 'WebSocket消息',
                'verbose_name_plural': 'WebSocket消息',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='APIMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.CharField(max_length=255, verbose_name='API端点')),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('DELETE', 'DELETE'), ('PATCH', 'PATCH')], max_length=10, verbose_name='请求方法')),
                ('status_code', models.IntegerField(verbose_name='状态码')),
                ('response_time', models.IntegerField(help_text='毫秒', verbose_name='响应时间')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.user', verbose_name='用户')),
            ],
            options={
                'verbose_name': 'API调用指标',
                'verbose_name_plural': 'API调用指标',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ConfigItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, verbose_name='配置键')),
                ('value', models.TextField(verbose_name='配置值')),
                ('description', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('is_sensitive', models.BooleanField(default=False, help_text='敏感配置会被加密存储', verbose_name='敏感配置')),
                ('environment', models.CharField(choices=[('development', '开发环境'), ('testing', '测试环境'), ('production', '生产环境')], max_length=20, verbose_name='环境')),
                ('type', models.CharField(choices=[('app', '应用配置'), ('api', 'API配置'), ('db', '数据库配置'), ('cache', '缓存配置'), ('queue', '队列配置')], max_length=20, verbose_name='类型')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_configs', to='users.user', verbose_name='创建人')),
            ],
            options={
                'verbose_name': '配置项',
                'verbose_name_plural': '配置项',
                'ordering': ['type', 'key'],
                'unique_together': {('key', 'environment')},
            },
        ),
    ]
